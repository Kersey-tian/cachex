<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启用自动代理: 如果已经开启则不必重复开启 -->
    <aop:aspectj-autoproxy/>

    <!-- 注入Cached切面:
            open: 定义Cacher的全局开关
            caches: 只要实现了ICache接口的cache产品均可被Cacher托管
     -->
    <bean class="com.alibaba.cacher.CacherAspect">
        <constructor-arg name="open" value="true"/>
        <constructor-arg name="caches">
            <map key-type="java.lang.String" value-type="com.alibaba.cacher.ICache">
                <!--<entry key="noOp" value-ref="noOpCache"/>-->
                <!--<entry key="jdkMap" value-ref="jdkConcurrentMapCache"/>-->
                <!--<entry key="guava" value-ref="guavaCache"/>-->
                <!--<entry key="mapDB" value-ref="mapDBCache"/>-->
                <!--<entry key="ehcache" value-ref="ehCache"/>-->
                <!--
                    <entry key="vRedisPool" value-ref="vRedisPoolCache"/>
                    <entry key="vRedisCluster" value-ref="vRedisClusterCache"/>
                -->
                <entry key="tair" value-ref="tair"/>
                <!--<entry key="memcached" value-ref="memcachedCache"/>-->
            </map>
        </constructor-arg>
    </bean>

    <!-- 接入cacher的缓存产品需要实现ICache 接口:
      默认提供了基于   无操作的缓存、
                     VdianRedisPool模式、
                     VdianRedisCluster模式、
                     Memcached、
                     通用Redis、
                     Guava、
                     JdkConcurrentHashMap、
                     MapDB、
                     Ehcache等9款缓存实现.(注意: 开源版本没有提供VdianPool模式和VdianCluster模式实现)
     -->
    <bean id="tair" class="com.alibaba.cacher.support.cache.TairCache">
        <constructor-arg name="configId" value="mdbcomm-daily"/>
        <constructor-arg name="namespace" value="161"/>
        <constructor-arg name="serializer">
            <bean class="com.alibaba.cacher.support.serialize.Hessian2Serializer"/>
        </constructor-arg>
        <constructor-arg name="timeoutMS" value="1000000"/>
        <constructor-arg name="compress" value="false"/>
        <constructor-arg name="dynamicConfig" value="true"/>
    </bean>
    <!--<bean id="noOpCache" class="com.alibaba.cacher.support.cache.NoOpCache" lazy-init="true"/>-->
    <!--<bean id="jdkConcurrentMapCache" class="com.alibaba.cacher.support.cache.JdkConcurrentMapCache" lazy-init="true"/>-->
    <!--<bean id="guavaCache" class="com.alibaba.cacher.support.cache.GuavaCache" lazy-init="true">-->
    <!--<constructor-arg name="size" value="1000"/>-->
    <!--<constructor-arg name="expire" value="6000"/>-->
    <!--</bean>-->
    <!--<bean id="mapDBCache" class="com.alibaba.cacher.support.cache.MapDBCache" lazy-init="true">-->
    <!--<constructor-arg name="interval" value="1000000"/>-->
    <!--<constructor-arg name="maxSize" value="1000000"/>-->
    <!--<constructor-arg name="maxStoreSize" value="2"/>-->
    <!--</bean>-->
    <!--<bean id="ehCache" class="com.alibaba.cacher.support.cache.EhCache" lazy-init="true">-->
    <!--<constructor-arg name="heapEntries" value="20"/>-->
    <!--<constructor-arg name="offHeapMBSize" value="512"/>-->
    <!--<constructor-arg name="diskPath" value="/data/cache"/>-->
    <!--<constructor-arg name="diskGBSize" value="1"/>-->
    <!--</bean>-->
    <!--
        <bean id="vRedisPoolCache" class="com.vdian.cacher.support.cache.VRedisPoolCache">
            <constructor-arg name="namespace" value="ares"/>
        </bean>
        <bean id="vRedisClusterCache" class="com.vdian.cacher.support.cache.VRedisClusterCache">
            <constructor-arg name="namespace" value="feedcenter_cluster"/>
        </bean>
    -->
    <!--<bean id="redisCache" class="com.alibaba.cacher.support.cache.RedisClusterCache" lazy-init="true">-->
    <!--<constructor-arg name="connectString" value="10.1.101.60:6379,10.1.101.60:6380,10.1.101.60:6381"/>-->
    <!--<constructor-arg name="maxRedirections" value="3"/>-->
    <!--<constructor-arg name="maxTotal" value="3"/>-->
    <!--<constructor-arg name="serializer">-->
    <!--<bean class="com.alibaba.cacher.support.serialize.Hessian2Serializer"/>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg name="timeout" value="200"/>-->
    <!--<constructor-arg name="waitMillis" value="20"/>-->
    <!--</bean>-->
    <!--<bean id="memcachedCache" class="com.alibaba.cacher.support.cache.MemcachedCache" lazy-init="true">-->
    <!--<constructor-arg name="ipPorts" value="10.1.101.60:11211"/>-->
    <!--</bean>-->

    <context:component-scan base-package="com.alibaba.cacher.service.impl"/>
</beans>